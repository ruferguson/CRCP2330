// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    DMux8Way(in = load, sel = address[3], a = a, b = b, c = c, d = d, e = e, f = f, g = g, h = h);
    Register(in[16] = in[16], load = a, out = out[0]);
    Register(in[16] = in[16], load = b, out = out[1]);
    Register(in[16] = in[16], load = c, out = out[2]);
    Register(in[16] = in[16], load = d, out = out[3]);
    Register(in[16] = in[16], load = d, out = out[4]);
    Register(in[16] = in[16], load = d, out = out[5]);
    Register(in[16] = in[16], load = d, out = out[6]);
    Register(in[16] = in[16], load = d, out = out[7]);
}